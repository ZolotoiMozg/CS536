Begin test of CSX scanner. Scanning file tests/complex.csx:
11:3 	identifier(include)
11:11 	<
11:12 	identifier(vector)
11:18 	>
13:3 	identifier(include)
13:11 	<
13:12 	identifier(cmath)
13:17 	>
15:1 	identifier(using)
15:7 	identifier(namespace)
15:17 	identifier(std)
15:20 	;
17:1 	CONST
17:7 	identifier(double)
17:14 	identifier(eps)
17:18 	=
17:20 	integer literal(1)
17:21 	identifier(e)
17:22 	-
17:23 	integer literal(10)
17:25 	;
19:1 	identifier(typedef)
19:9 	identifier(double)
19:16 	identifier(T)
19:17 	;
20:1 	identifier(struct)
20:8 	identifier(Pt)
20:11 	{
21:5 	identifier(T)
21:7 	identifier(x)
21:8 	,
21:10 	identifier(y)
21:11 	;
22:1 	}
22:2 	;
24:1 	identifier(Pt)
24:4 	identifier(operator)
24:12 	-
24:13 	(
24:14 	CONST
24:20 	identifier(Pt)
24:28 	identifier(a)
24:29 	,
24:31 	CONST
24:37 	identifier(Pt)
24:45 	identifier(b)
24:46 	)
24:48 	{
25:5 	identifier(Pt)
25:8 	identifier(ret)
25:11 	;
26:5 	identifier(ret)
26:13 	identifier(x)
26:15 	=
26:17 	identifier(a)
26:23 	identifier(x)
26:25 	-
26:27 	identifier(b)
26:33 	identifier(x)
26:34 	;
27:5 	identifier(ret)
27:13 	identifier(y)
27:15 	=
27:17 	identifier(a)
27:23 	identifier(y)
27:25 	-
27:27 	identifier(b)
27:33 	identifier(y)
27:34 	;
28:5 	RETURN
28:12 	identifier(ret)
28:15 	;
29:1 	}
31:1 	identifier(struct)
31:8 	identifier(line)
31:13 	{
32:5 	identifier(Pt)
32:8 	identifier(a)
32:9 	,
32:11 	identifier(b)
32:12 	;
33:1 	}
33:2 	;
35:1 	identifier(T)
35:3 	identifier(cross)
35:8 	(
35:9 	CONST
35:15 	identifier(Pt)
35:23 	identifier(a)
35:24 	,
35:26 	CONST
35:32 	identifier(Pt)
35:40 	identifier(b)
35:41 	)
35:43 	{
36:5 	RETURN
36:12 	identifier(a)
36:18 	identifier(x)
36:20 	*
36:22 	identifier(b)
36:28 	identifier(y)
36:30 	-
36:32 	identifier(a)
36:38 	identifier(y)
36:40 	*
36:42 	identifier(b)
36:48 	identifier(x)
36:49 	;
37:1 	}
39:1 	identifier(T)
39:3 	identifier(dot)
39:6 	(
39:8 	CONST
39:14 	identifier(Pt)
39:22 	identifier(a)
39:23 	,
39:25 	CONST
39:31 	identifier(Pt)
39:39 	identifier(b)
39:40 	)
39:42 	{
40:5 	RETURN
40:12 	identifier(a)
40:18 	identifier(x)
40:20 	*
40:22 	identifier(b)
40:28 	identifier(x)
40:30 	+
40:32 	identifier(a)
40:38 	identifier(y)
40:40 	*
40:42 	identifier(b)
40:48 	identifier(y)
40:49 	;
41:1 	}
43:1 	BOOL
43:6 	identifier(feq)
43:9 	(
43:10 	identifier(double)
43:17 	identifier(x)
43:18 	,
43:20 	identifier(double)
43:27 	identifier(y)
43:28 	)
43:30 	{
44:5 	RETURN
44:12 	identifier(fabs)
44:16 	(
44:17 	identifier(x)
44:19 	-
44:21 	identifier(y)
44:22 	)
44:24 	<
44:26 	identifier(eps)
44:29 	;
45:1 	}
47:1 	BOOL
47:6 	identifier(parallel)
47:14 	(
47:16 	CONST
47:22 	identifier(line)
47:32 	identifier(x)
47:33 	,
47:35 	CONST
47:41 	identifier(line)
47:51 	identifier(y)
47:53 	)
47:55 	{
48:5 	RETURN
48:12 	identifier(feq)
48:15 	(
48:17 	identifier(cross)
48:22 	(
48:23 	identifier(x)
48:29 	identifier(b)
48:30 	-
48:31 	identifier(x)
48:37 	identifier(a)
48:38 	,
48:39 	identifier(y)
48:45 	identifier(a)
48:46 	-
48:47 	identifier(y)
48:53 	identifier(b)
48:54 	)
48:55 	,
48:57 	integer literal(0)
48:58 	)
48:59 	;
49:1 	}
51:1 	BOOL
51:6 	identifier(perpendicular)
51:19 	(
51:21 	CONST
51:27 	identifier(line)
51:37 	identifier(x)
51:38 	,
51:40 	CONST
51:46 	identifier(line)
51:56 	identifier(y)
51:57 	)
51:59 	{
52:5 	RETURN
52:12 	identifier(feq)
52:15 	(
52:17 	identifier(dot)
52:20 	(
52:21 	identifier(x)
52:27 	identifier(b)
52:28 	-
52:29 	identifier(x)
52:35 	identifier(a)
52:36 	,
52:37 	identifier(y)
52:43 	identifier(a)
52:44 	-
52:45 	identifier(y)
52:51 	identifier(b)
52:52 	)
52:53 	,
52:55 	integer literal(0)
52:56 	)
52:57 	;
53:1 	}
55:1 	identifier(T)
55:3 	identifier(dist)
55:7 	(
55:8 	identifier(Pt)
55:11 	identifier(a)
55:12 	,
55:14 	identifier(Pt)
55:17 	identifier(b)
55:18 	)
55:20 	{
56:5 	RETURN
56:12 	identifier(sqrt)
56:16 	(
56:17 	(
56:18 	identifier(a)
56:24 	identifier(x)
56:26 	-
56:28 	identifier(b)
56:34 	identifier(x)
56:35 	)
56:37 	*
56:39 	(
56:40 	identifier(a)
56:46 	identifier(x)
56:48 	-
56:50 	identifier(b)
56:56 	identifier(x)
56:57 	)
56:59 	+
56:61 	(
56:62 	identifier(a)
56:68 	identifier(y)
56:70 	-
56:72 	identifier(b)
56:78 	identifier(y)
56:79 	)
56:81 	*
56:83 	(
56:84 	identifier(a)
56:90 	identifier(y)
56:92 	-
56:94 	identifier(b)
56:100 	identifier(y)
56:101 	)
56:102 	)
56:103 	;
57:1 	}
59:1 	identifier(T)
59:3 	identifier(distance)
59:11 	(
59:12 	identifier(line)
59:17 	identifier(l)
59:18 	,
59:20 	identifier(Pt)
59:23 	identifier(p)
59:24 	)
59:26 	{
60:5 	RETURN
60:12 	identifier(fabs)
60:16 	(
60:17 	identifier(cross)
60:22 	(
60:23 	identifier(l)
60:29 	identifier(a)
60:31 	-
60:33 	identifier(p)
60:34 	,
60:36 	identifier(l)
60:42 	identifier(b)
60:44 	-
60:46 	identifier(p)
60:47 	)
60:48 	)
60:50 	/
60:52 	identifier(dist)
60:56 	(
60:57 	identifier(l)
60:63 	identifier(a)
60:64 	,
60:66 	identifier(l)
60:72 	identifier(b)
60:73 	)
60:74 	;
61:1 	}
63:1 	INT
63:5 	identifier(main)
63:9 	(
63:10 	)
63:12 	{
64:5 	INT
64:9 	identifier(n)
64:10 	;
65:5 	WHILE
65:11 	(
65:12 	identifier(cin)
65:16 	>
65:17 	>
65:19 	identifier(n)
65:20 	)
65:22 	{
66:9 	identifier(vector)
66:15 	<
66:17 	identifier(vector)
66:23 	<
66:24 	identifier(line)
66:28 	>
66:30 	>
66:32 	identifier(groups)
66:38 	;
67:9 	identifier(for)
67:13 	(
67:14 	INT
67:18 	identifier(i)
67:20 	=
67:22 	integer literal(0)
67:23 	;
67:25 	identifier(i)
67:27 	<
67:29 	identifier(n)
67:30 	;
67:32 	++
67:34 	identifier(i)
67:35 	)
67:37 	{
68:13 	identifier(line)
68:18 	identifier(l)
68:19 	;
69:13 	identifier(cin)
69:17 	>
69:18 	>
69:20 	identifier(l)
69:26 	identifier(a)
69:32 	identifier(x)
69:34 	>
69:35 	>
69:37 	identifier(l)
69:43 	identifier(a)
69:49 	identifier(y)
69:51 	>
69:52 	>
69:54 	identifier(l)
69:60 	identifier(b)
69:66 	identifier(x)
69:68 	>
69:69 	>
69:71 	identifier(l)
69:77 	identifier(b)
69:83 	identifier(y)
69:84 	;
71:13 	INT
71:17 	identifier(gj)
71:20 	=
71:22 	-
71:23 	integer literal(1)
71:24 	;
72:13 	identifier(for)
72:17 	(
72:18 	INT
72:22 	identifier(j)
72:24 	=
72:26 	integer literal(0)
72:27 	;
72:29 	identifier(gj)
72:32 	==
72:35 	-
72:36 	integer literal(1)
72:38 	&&
72:41 	identifier(j)
72:43 	<
72:45 	identifier(groups)
72:56 	identifier(size)
72:60 	(
72:61 	)
72:62 	;
72:64 	++
72:66 	identifier(j)
72:67 	)
72:69 	{
73:17 	IF
73:20 	(
73:21 	identifier(parallel)
73:29 	(
73:30 	identifier(l)
73:31 	,
73:33 	identifier(groups)
73:39 	[
73:40 	identifier(j)
73:41 	]
73:42 	[
73:43 	integer literal(0)
73:44 	]
73:45 	)
73:46 	)
74:21 	identifier(gj)
74:24 	=
74:26 	identifier(j)
74:27 	;
75:13 	}
76:13 	IF
76:16 	(
76:17 	identifier(gj)
76:20 	==
76:23 	-
76:24 	integer literal(1)
76:25 	)
77:17 	identifier(groups)
77:28 	identifier(push)
77:37 	identifier(back)
77:41 	(
77:43 	identifier(vector)
77:49 	<
77:50 	identifier(line)
77:54 	>
77:56 	(
77:57 	integer literal(1)
77:58 	,
77:60 	identifier(l)
77:61 	)
77:62 	)
77:63 	;
78:13 	ELSE
79:17 	identifier(groups)
79:23 	[
79:24 	identifier(gj)
79:26 	]
79:32 	identifier(push)
79:41 	identifier(back)
79:45 	(
79:46 	identifier(l)
79:47 	)
79:48 	;
80:9 	}
81:9 	identifier(vector)
81:15 	<
81:17 	identifier(vector)
81:23 	<
81:24 	identifier(double)
81:30 	>
81:32 	>
81:34 	identifier(distances)
81:43 	(
81:44 	identifier(groups)
81:55 	identifier(size)
81:59 	(
81:60 	)
81:61 	)
81:62 	;
82:9 	identifier(for)
82:13 	(
82:14 	INT
82:18 	identifier(i)
82:20 	=
82:22 	integer literal(0)
82:23 	;
82:25 	identifier(i)
82:27 	<
82:29 	identifier(groups)
82:40 	identifier(size)
82:44 	(
82:45 	)
82:46 	;
82:48 	++
82:50 	identifier(i)
82:51 	)
82:53 	{
83:13 	identifier(for)
83:17 	(
83:18 	INT
83:22 	identifier(j)
83:24 	=
83:26 	integer literal(0)
83:27 	;
83:29 	identifier(j)
83:31 	<
83:33 	identifier(groups)
83:39 	[
83:40 	identifier(i)
83:41 	]
83:47 	identifier(size)
83:51 	(
83:52 	)
83:53 	;
83:55 	++
83:57 	identifier(j)
83:58 	)
84:17 	identifier(for)
84:21 	(
84:22 	INT
84:26 	identifier(k)
84:28 	=
84:30 	identifier(j)
84:32 	+
84:34 	integer literal(1)
84:35 	;
84:37 	identifier(k)
84:39 	<
84:41 	identifier(groups)
84:47 	[
84:48 	identifier(i)
84:49 	]
84:55 	identifier(size)
84:59 	(
84:60 	)
84:61 	;
84:63 	++
84:65 	identifier(k)
84:66 	)
85:21 	identifier(distances)
85:30 	[
85:31 	identifier(i)
85:32 	]
85:38 	identifier(push)
85:47 	identifier(back)
85:51 	(
85:52 	identifier(distance)
85:60 	(
85:61 	identifier(groups)
85:67 	[
85:68 	identifier(i)
85:69 	]
85:70 	[
85:71 	identifier(j)
85:72 	]
85:73 	,
85:75 	identifier(groups)
85:81 	[
85:82 	identifier(i)
85:83 	]
85:84 	[
85:85 	identifier(k)
85:86 	]
85:92 	identifier(a)
85:93 	)
85:94 	)
85:95 	;
86:9 	}
87:9 	identifier(for)
87:13 	(
87:14 	INT
87:18 	identifier(i)
87:20 	=
87:22 	integer literal(0)
87:23 	;
87:25 	identifier(i)
87:27 	<
87:29 	identifier(distances)
87:43 	identifier(size)
87:47 	(
87:48 	)
87:49 	;
87:51 	++
87:53 	identifier(i)
87:54 	)
88:13 	identifier(sort)
88:17 	(
88:18 	identifier(distances)
88:27 	[
88:28 	identifier(i)
88:29 	]
88:35 	identifier(begin)
88:40 	(
88:41 	)
88:42 	,
88:44 	identifier(distances)
88:53 	[
88:54 	identifier(i)
88:55 	]
88:61 	identifier(end)
88:64 	(
88:65 	)
88:66 	)
88:67 	;
89:9 	INT
89:13 	identifier(ans)
89:17 	=
89:19 	integer literal(0)
89:20 	;
90:9 	identifier(for)
90:13 	(
90:14 	INT
90:18 	identifier(i)
90:20 	=
90:22 	integer literal(0)
90:23 	;
90:25 	identifier(i)
90:27 	<
90:29 	identifier(groups)
90:40 	identifier(size)
90:44 	(
90:45 	)
90:46 	;
90:48 	++
90:50 	identifier(i)
90:51 	)
90:53 	{
91:13 	identifier(for)
91:17 	(
91:18 	INT
91:22 	identifier(j)
91:24 	=
91:26 	identifier(i)
91:28 	+
91:30 	integer literal(1)
91:31 	;
91:33 	identifier(j)
91:35 	<
91:37 	identifier(groups)
91:48 	identifier(size)
91:52 	(
91:53 	)
91:54 	;
91:56 	++
91:58 	identifier(j)
91:59 	)
91:61 	{
92:17 	IF
92:20 	(
92:21 	identifier(perpendicular)
92:34 	(
92:35 	identifier(groups)
92:41 	[
92:42 	identifier(i)
92:43 	]
92:44 	[
92:45 	integer literal(0)
92:46 	]
92:47 	,
92:49 	identifier(groups)
92:55 	[
92:56 	identifier(j)
92:57 	]
92:58 	[
92:59 	integer literal(0)
92:60 	]
92:61 	)
92:62 	)
92:64 	{
93:21 	identifier(for)
93:25 	(
93:26 	INT
93:30 	identifier(k)
93:32 	=
93:34 	integer literal(0)
93:35 	;
93:37 	identifier(k)
93:39 	<
93:41 	identifier(distances)
93:50 	[
93:51 	identifier(i)
93:52 	]
93:58 	identifier(size)
93:62 	(
93:63 	)
93:64 	;
93:66 	++
93:68 	identifier(k)
93:69 	)
93:71 	{
94:25 	identifier(ans)
94:29 	+
94:30 	=
94:32 	identifier(upper)
94:42 	identifier(bound)
94:47 	(
94:48 	identifier(distances)
94:57 	[
94:58 	identifier(j)
94:59 	]
94:65 	identifier(begin)
94:70 	(
94:71 	)
94:72 	,
94:74 	identifier(distances)
94:83 	[
94:84 	identifier(j)
94:85 	]
94:91 	identifier(end)
94:94 	(
94:95 	)
94:96 	,
94:98 	identifier(distances)
94:107 	[
94:108 	identifier(i)
94:109 	]
94:110 	[
94:111 	identifier(k)
94:112 	]
94:114 	+
94:116 	identifier(eps)
94:119 	)
95:29 	-
95:31 	identifier(lower)
95:41 	identifier(bound)
95:46 	(
95:47 	identifier(distances)
95:56 	[
95:57 	identifier(j)
95:58 	]
95:64 	identifier(begin)
95:69 	(
95:70 	)
95:71 	,
95:73 	identifier(distances)
95:82 	[
95:83 	identifier(j)
95:84 	]
95:90 	identifier(end)
95:93 	(
95:94 	)
95:95 	,
95:97 	identifier(distances)
95:106 	[
95:107 	identifier(i)
95:108 	]
95:109 	[
95:110 	identifier(k)
95:111 	]
95:113 	-
95:115 	identifier(eps)
95:118 	)
95:119 	;
96:21 	}
97:17 	}
98:13 	}
99:9 	}
100:9 	identifier(cout)
100:14 	<
100:15 	<
100:17 	identifier(ans)
100:21 	<
100:22 	<
100:24 	identifier(endl)
100:28 	;
101:5 	}
102:5 	RETURN
102:12 	integer literal(0)
102:13 	;
103:1 	}
End test of CSX scanner.
