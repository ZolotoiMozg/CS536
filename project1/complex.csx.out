CSX program parsed correctly.
Here is its unparsing:
1:	 {
2:	   int x;
3:	   int z;
4:	   int y;
5:	   bool u;
6:	   bool v;
7:	   x = 10;
8:	   y = 20;
9:	   x = ((x - y) - (y - ((x + y) - ((y - x) + (x - y)))));
10:	   u = (x == y);
11:	   v = (x != ((1 - y) + x));
12:	   if (((x == 298) - y))
12:	      {
13:	         x = ((x - y) - (y - ((x + y) - ((y - x) + (x - y)))));
14:	         v = (x != ((1 - y) + x));
15:	         if (v)
15:	            {
16:	               int x;
17:	               x = y;
18:	               x = ((x - y) - ((x + 287) - ((y + y) - ((y - x) + (x - y)))));
19:	               u = (x == y);
20:	               if ((u == v))
20:	                  {
21:	                     int y;
22:	                     bool v;
23:	                     x = (((11 + x) - y) - (x - ((x + y) - ((y - x) + (x - y)))));
24:	                     u = ((x + 10) != (378 - y));
20:	                  }
26:	               x = (x - y);
27:	               y = (x - y);
28:	               x = (x - y);
29:	               u = (x == y);
15:	            }
31:	         v = (278 != y);
32:	         x = (x - y);
33:	         y = (x - y);
34:	         x = (x - y);
12:	      }
36:	   x = (x - y);
37:	   u = ((x - 1879) == (y + 387));
38:	   y = (x - y);
39:	   x = (x - y);
1:	 } EOF


Here is an analysis of identifier declarations and uses for tests/complex.csx:
2:	x(int): 7,9(5),10,11(2),12,13(5),14(2),32(2),33,34(2),36(2),37,38,39(2)
3:	z(int)
4:	y(int): 8,9(5),10,11,12,13(5),14,17,18(5),19,26,27(2),28,29,31,32,33(2),34,36,37,38(2),39
5:	u(bool): 10,19,20,24,29,37
6:	v(bool): 11,14,15,20,31
16:	x(int): 17,18(5),19,23(6),24,26(2),27,28(2),29
21:	y(int): 23(4),24
22:	v(bool)

